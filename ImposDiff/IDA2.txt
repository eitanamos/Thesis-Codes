import xlrd
import xlsxwriter

# Output Excel
    #Enter location of 'actualattack' file
w_workbook = xlsxwriter.Workbook(
    r"C:\Users\user\Desktop\Master's Degree\THESIS\ThesisWork\Thesis\Codes\ImposDiff\\actualattack.xlsx")
w_sheet = w_workbook.add_worksheet()

# Copy the original data
list_of_keys = ['0??0', '0??1', '0??2','0??3','0??4','0??5','0??6', '0??7', '0??8','0??9','0??A','0??B','0??C', '0??D',
                '0??E','0??F', '1??0', '1??1', '1??2','1??3','1??4','1??5','1??6', '1??7', '1??8','1??9','1??A','1??B',
                '1??C', '1??D', '1??E','1??F','2??0', '2??1', '2??2','2??3','2??4','2??5','2??6', '2??7', '2??8','2??9',
                '2??A','2??B','2??C', '2??D', '2??E','2??F','3??0', '3??1', '3??2','3??3','3??4','3??5','3??6', '3??7',
                '3??8','3??9','3??A','3??B','3??C', '3??D', '3??E','3??F','4??0', '4??1', '4??2','4??3','4??4','4??5',
                '4??6', '4??7', '4??8','4??9','4??A','4??B','4??C', '4??D', '4??E','4??F','5??0', '5??1', '5??2','5??3',
                '5??4','5??5','5??6', '5??7', '5??8','5??9','5??A','5??B','5??C', '5??D', '5??E','5??F','6??0', '6??1',
                '6??2','6??3','6??4','6??5','6??6', '6??7', '6??8','6??9','6??A','6??B','6??C', '6??D', '6??E','6??F',
                '7??0', '7??1', '7??2','7??3','7??4','7??5','7??6', '7??7', '7??8','7??9','7??A','7??B','7??C', '7??D',
                '7??E','7??F','8??0', '8??1', '8??2','8??3','8??4','8??5','8??6', '8??7', '8??8','8??9','8??A','8??B',
                '8??C', '8??D', '8??E','8??F','9??0', '9??1', '9??2','9??3','9??4','9??5','9??6', '9??7', '9??8','9??9',
                '9??A','9??B','9??C', '9??D', '9??E','9??F','A??0', 'A??1', 'A??2','A??3','A??4','A??5','A??6', 'A??7',
                'A??8','A??9','A??A','A??B','A??C', 'A??D', 'A??E','A??F','A??0', 'B??1', 'B??2','B??3','B??4','B??5','B??6',
                'B??7', 'B??8','B??9','B??A','B??B','B??C', 'B??D', 'B??E','B??F','C??0', 'C??1', 'C??2','C??3','C??4',
                'C??5','C??6', 'C??7', 'C??8','C??9','C??A','C??B','C??C', 'C??D', 'C??E','C??F','D??0', 'D??1', 'D??2',
                'D??3','D??4','D??5','D??6', 'D??7', 'D??8','D??9','D??A','D??B','D??C', 'D??D', 'D??E','D??F','E??0',
                'E??1', 'E??2','E??3','E??4','E??5','E??6', 'E??7', 'E??8','E??9','E??A','E??B','E??C', 'E??D', 'E??E',
                'E??F','F??0', 'F??1', 'F??2','F??3','F??4','F??5','F??6', 'F??7', 'F??8','F??9','F??A','F??B','F??C',
                'F??D', 'F??E','F??F']

for i in range(256):
    w_sheet.write(i, 0, list_of_keys[i])

def impossible_differences(input_difference):
    def possibledifferences(input_difference):
        afterkeyaddition = input_difference
        change_to_list = list(afterkeyaddition)
        aftersbox = {
            "0": "0",
            "1": "124689E",
            "2": "2389ACF",
            "3": "1478ACD",
            "4": "12567AF",
            "5": "4679BCF",
            "6": "568ABCE",
            "7": "3678DEF",
            "8": "13458BF",
            "9": "159CDEF",
            "A": "1236BCD",
            "B": "23457CE",
            "C": "34569AD",
            "D": "24ABDEF",
            "E": "1379ABE",
            "F": "25789BD"
        }
        first_letter = aftersbox[change_to_list[0]]
        second_letter = aftersbox[change_to_list[1]]
        third_letter = aftersbox[change_to_list[2]]
        fourth_letter = aftersbox[change_to_list[3]]
        new_first_letter = list(first_letter)
        new_second_letter = list(second_letter)
        new_third_letter = list(third_letter)
        new_fourth_letter = list(fourth_letter)
        completely_new_list = []

        l = 0
        while l < len(new_fourth_letter):
            k = 0
            while k < len(new_third_letter):
                j = 0
                while j < len(new_second_letter):
                    i = 0
                    while i < len(new_first_letter):
                        new_list = new_first_letter[i] + new_second_letter[j] + new_third_letter[k] + \
                                   new_fourth_letter[
                                       l]
                        completely_new_list.append(new_list)
                        i = i + 1
                    j = j + 1
                k = k + 1
            l = l + 1

        def switch_rows(four_word_input):
            a = list(four_word_input)
            b = a[1]
            c = a[3]
            a[1] = c
            a[3] = b
            new_word = "".join(a)
            return new_word

        really_new_list = []
        i = 0
        while i < len(completely_new_list):
            really_new_list.append(switch_rows(completely_new_list[i]))
            i = i + 1

        def mixC(word):
            mixColumn = {
                "0": {"0": "00", "1": "5D", "2": "A9", "3": "F4", "4": "71", "5": "2C", "6": "D8", "7": "85",
                      "8": "E2",
                      "9": "BF",
                      "A": "4B", "B": "16", "C": "93", "D": "CE", "E": "3A", "F": "67"},
                "1": {"0": "D5", "1": "88", "2": "7C", "3": "21", "4": "A4", "5": "F9", "6": "0D", "7": "50",
                      "8": "37",
                      "9": "6A",
                      "A": "9E", "B": "C3", "C": "46", "D": "1B", "E": "EF", "F": "B2"},
                "2": {"0": "9A", "1": "C7", "2": "33", "3": "6E", "4": "EB", "5": "B6", "6": "42", "7": "1F",
                      "8": "78",
                      "9": "25",
                      "A": "D1", "B": "8C", "C": "09", "D": "54", "E": "A0", "F": "FD"},
                "3": {"0": "4F", "1": "12", "2": "E6", "3": "BB", "4": "3E", "5": "63", "6": "97", "7": "CA",
                      "8": "AD",
                      "9": "F0",
                      "A": "04", "B": "59", "C": "DC", "D": "81", "E": "75", "F": "28"},
                "4": {"0": "17", "1": "4A", "2": "BE", "3": "E3", "4": "66", "5": "3B", "6": "CF", "7": "92",
                      "8": "F5",
                      "9": "A8",
                      "A": "5C", "B": "01", "C": "84", "D": "D9", "E": "2D", "F": "70"},
                "5": {"0": "C2", "1": "9F", "2": "6B", "3": "36", "4": "B3", "5": "EE", "6": "1A", "7": "47",
                      "8": "20",
                      "9": "7D",
                      "A": "89", "B": "D4", "C": "51", "D": "0C", "E": "F8", "F": "A5"},
                "6": {"0": "8D", "1": "D0", "2": "24", "3": "79", "4": "FC", "5": "A1", "6": "55", "7": "08",
                      "8": "6F",
                      "9": "32",
                      "A": "C6", "B": "9B", "C": "1E", "D": "43", "E": "B7", "F": "EA"},
                "7": {"0": "58", "1": "05", "2": "F1", "3": "AC", "4": "29", "5": "74", "6": "80", "7": "DD",
                      "8": "BA",
                      "9": "E7",
                      "A": "13", "B": "4E", "C": "CB", "D": "96", "E": "62", "F": "3F"},
                "8": {"0": "2E", "1": "73", "2": "87", "3": "DA", "4": "5F", "5": "02", "6": "F6", "7": "AB",
                      "8": "CC",
                      "9": "91",
                      "A": "65", "B": "38", "C": "BD", "D": "E0", "E": "14", "F": "49"},
                "9": {"0": "FB", "1": "A6", "2": "52", "3": "0F", "4": "8A", "5": "D7", "6": "23", "7": "7E",
                      "8": "19",
                      "9": "44",
                      "A": "B0", "B": "ED", "C": "68", "D": "35", "E": "C1", "F": "9C"},
                "A": {"0": "B4", "1": "E9", "2": "1D", "3": "40", "4": "C5", "5": "98", "6": "6C", "7": "31",
                      "8": "56",
                      "9": "0B",
                      "A": "FF", "B": "A2", "C": "27", "D": "7A", "E": "8E", "F": "D3"},
                "B": {"0": "61", "1": "3C", "2": "C8", "3": "95", "4": "10", "5": "4D", "6": "B9", "7": "E4",
                      "8": "83",
                      "9": "DE",
                      "A": "2A", "B": "77", "C": "F2", "D": "AF", "E": "5B", "F": "06"},
                "C": {"0": "39", "1": "64", "2": "90", "3": "CD", "4": "48", "5": "15", "6": "E1", "7": "BC",
                      "8": "DB",
                      "9": "86",
                      "A": "72", "B": "2F", "C": "AA", "D": "F7", "E": "03", "F": "5E"},
                "D": {"0": "EC", "1": "B1", "2": "45", "3": "18", "4": "9D", "5": "C0", "6": "34", "7": "69",
                      "8": "0E",
                      "9": "53",
                      "A": "A7", "B": "FA", "C": "7F", "D": "22", "E": "D6", "F": "8B"},
                "E": {"0": "A3", "1": "FE", "2": "0A", "3": "57", "4": "D2", "5": "8F", "6": "7B", "7": "26",
                      "8": "41",
                      "9": "1C",
                      "A": "E8", "B": "B5", "C": "30", "D": "6D", "E": "99", "F": "C4"},
                "F": {"0": "76", "1": "2B", "2": "DF", "3": "82", "4": "07", "5": "5A", "6": "AE", "7": "F3",
                      "8": "94",
                      "9": "C9",
                      "A": "3D", "B": "60", "C": "E5", "D": "B8", "E": "4C", "F": "11"}
            }
            diction = mixColumn
            newWord = ""
            for i in range(len(word)):
                if i % 2 != 0:
                    continue
                newWord += diction[word[i + 1]][word[i]]
            return newWord

        truly_new_list = []
        i = 0
        while i < len(really_new_list):
            truly_new_list.append(mixC(really_new_list[i]))
            i = i + 1
        afterkeyaddition2 = truly_new_list
        return afterkeyaddition2

    b = input_difference

    def allpossibledifferences(input_difference):
        a = input_difference
        m = 0
        second_round_differences = []
        while m < len(possibledifferences(a)):
            second_round_differences.append(possibledifferences(possibledifferences(a)[m]))
            m = m + 1
        li = []
        for sublist in second_round_differences:
            li.extend(sublist)
        return li

    n = 0
    third_round_differences = []
    while n < len(allpossibledifferences(b)):
        third_round_differences.append(possibledifferences(allpossibledifferences(b)[n]))
        n = n + 1
    li2 = []
    for sublist in third_round_differences:
        li2.extend(sublist)
    erase_duplicates = list(dict.fromkeys(li2))
    sorted_possible_differences = sorted(erase_duplicates)

    def change_to_be_hex(str):
        return int(str, base=16)

    i = 0
    int_sorted_final_possible_differnces = []
    while i < len(sorted_possible_differences):
        int_sorted_final_possible_differnces.append(change_to_be_hex(sorted_possible_differences[i]))
        i = i + 1

    list_of_numbers = list(range(int(65536)))

    int_possible_differnces = []
    j = 0
    while j < len(list_of_numbers):
        if list_of_numbers[j] not in int_sorted_final_possible_differnces:
            int_possible_differnces.append(list_of_numbers[j])
        j = j + 1

    def number_to_hex(number):
        return hex(number)[2:].zfill(4).upper()

    k = 0
    list_of_impossible_differences = []
    while k < len(int_possible_differnces):
        list_of_impossible_differences.append(number_to_hex(int_possible_differnces[k]))
        k = k + 1

    def change_to_num(str):
        return int(str, 16)

    i = 0
    b = []
    count = 0
    a = list(map(change_to_num, list_of_impossible_differences))
    while i < (len(a) - 1):
        if (a[i + 1] - a[i]) == 1:
            count = count + 1
        else:
            count = 0

        if count >= 256:
            b.append(a[i])
            if count > 256:
                count = 0

        i = i + 1

    def number_to_hex(number):
        return hex(number)[2:].zfill(4).upper()[0:2]

    return list(map(number_to_hex, b))
res = impossible_differences('6000')
j=0
while j < len(res):
    w_sheet.write(258+j,0,res[j])
    j= j+1

w_workbook.close()
print('done')
